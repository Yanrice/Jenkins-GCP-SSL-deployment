# Storing GitHub credentials in Jenkins

You can integrate your GitHub repository with Jenkins by storing your GitHub credentials in Jenkins and then referencing those credentials within your Jenkins jobs. 
Here's how to do it:
1. Generate a GitHub Personal Access Token
Go to your GitHub account settings.
Navigate to "Developer settings" > "Personal access tokens" > "Tokens (classic)".
Click on "Generate new token".
Provide a descriptive name for your token and select the necessary permissions (e.g., repo access for private repositories). Note that GitHub recommends token-based authentication over using passwords for Git operations.
Click "Generate token" and copy the generated token, advises Medium. 
2. Configure Credentials in Jenkins
Open your Jenkins dashboard.
Navigate to "Manage Jenkins" > "Manage Credentials".
Select the appropriate domain (usually "System" and then "Global credentials (unrestricted)"), or click "Add Credentials" if no credentials are configured.
Choose "Secret text" as the credential kind.
Paste the GitHub token into the "Secret" field.
Give the credentials a meaningful ID and description.
Click "OK" to save. 
3. Configure the Jenkins job
Open the Jenkins job that needs to access your GitHub repository.
In the job's configuration, find the "Source Code Management" section and select "Git".
Enter your GitHub repository URL.
Under "Credentials", choose the GitHub credentials you created from the dropdown menu.
Save the job configuration. 
